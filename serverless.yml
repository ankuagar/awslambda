# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: lambda-serverless-tutorial
#app: your-app-name
#tenant: your-tenant-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

plugins:
  - serverless-python-requirements

custom:
    pythonRequirements:
      dockerizePip: true

package:
  exclude:
    - ./**
  include:
    - src/**

provider:
  name: aws
  runtime: python3.7
  profile: default
  region: us-west-2
  accountid: ${env:accountid}
  stage: ${opt:stage}
  timeout: 10 # The default is 6 seconds. Note: API Gateway current maximum is 30 seconds


# you can overwrite defaults here

# service wide environment variables
  environment:
    service_wide_env_variable: service-wide-env-variable-value


# you can add statements to the Lambda function's IAM Role here
# Also by default, your Lambda functions have permission to create and write to CloudWatch logs.
# see https://serverless.com/framework/docs/providers/aws/guide/iam/

  iamRoleStatements:
    - Effect: Allow
      Action:
       - sns:Publish
      Resource:
       #- !Ref DeadLetterQueueSNS # this is valid too
       - Ref: DeadLetterQueueSNS # this is also valid

resources:
  Resources:
    ExampleAPIGatewayRestAPI:
      Type: AWS::ApiGateway::RestApi
      Properties:
        ApiKeySourceType: HEADER
        Description: An example API Gateway REST Api
        EndpointConfiguration:
          Types:
              - REGIONAL
        Name: RestAPIName
        Parameters:
            headername : headervalue

    ExampleAPIGatewayUsagePlan:
      Type: AWS::ApiGateway::UsagePlan
      DependsOn: ExampleAPIGatewayDeployment # needed, otherwise the Stage (created in ExampleAPIGatewayDeployment) won't be available
      Properties:
        ApiStages:
         - ApiId: !Ref ExampleAPIGatewayRestAPI
           Stage: ${self:provider.stage}
        Description: Example usage plan
        Quota:
          Limit: 5000
          Period: MONTH
        Throttle:
          BurstLimit: 200
          RateLimit: 100
        UsagePlanName: UsagePlanName

    ExampleAPIGatewayMethod:
        Type: AWS::ApiGateway::Method
        Properties:
          AuthorizationType: NONE
          Integration:
              Type: MOCK
              RequestTemplates:
                  "application/json": "{\n \"statusCode\": 200\n}"
              IntegrationResponses:
                 - StatusCode: 200
          MethodResponses:
                 - StatusCode: 200
          HttpMethod: POST
          ResourceId: !GetAtt
            - ExampleAPIGatewayRestAPI
            - RootResourceId
          RestApiId: !Ref ExampleAPIGatewayRestAPI

    ExampleAPIGatewayDeployment: # you can't deploy to a stage if the API has no methods (GET, POST etc)
      Type: AWS::ApiGateway::Deployment
      DependsOn: ExampleAPIGatewayMethod
      Properties:
        RestApiId: !Ref ExampleAPIGatewayRestAPI
        Description: Example deployment
        StageName: ${self:provider.stage} # A name for the stage that API Gateway creates with this deployment. Use only alphanumeric characters.
